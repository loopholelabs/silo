package packets

const COMMAND_REQUEST = byte(0)
const COMMAND_RESPONSE = byte(0x80)

const (
	COMMAND_READ_AT           = COMMAND_REQUEST | byte(1)
	COMMAND_WRITE_AT          = COMMAND_REQUEST | byte(2)
	COMMAND_NEED_AT           = COMMAND_REQUEST | byte(3)
	COMMAND_DONT_NEED_AT      = COMMAND_REQUEST | byte(4)
	COMMAND_DIRTY_LIST        = COMMAND_REQUEST | byte(5)
	COMMAND_DEV_INFO          = COMMAND_REQUEST | byte(6)
	COMMAND_EVENT             = COMMAND_REQUEST | byte(7)
	COMMAND_WRITE_AT_COMP     = COMMAND_REQUEST | byte(8)
	COMMAND_HASHES            = COMMAND_REQUEST | byte(9)
	COMMAND_WRITE_AT_WITH_MAP = COMMAND_REQUEST | byte(10)
	COMMAND_REMOVE_DEV        = COMMAND_REQUEST | byte(11)
	COMMAND_REMOVE_FROM_MAP   = COMMAND_REQUEST | byte(12)
	COMMAND_WRITE_AT_HASH     = COMMAND_REQUEST | byte(13)
	COMMAND_ALTERNATE_SOURCES = COMMAND_REQUEST | byte(14)
)

const (
	COMMAND_READ_AT_RESPONSE      = COMMAND_RESPONSE | byte(1)
	COMMAND_READ_AT_RESPONSE_ERR  = COMMAND_RESPONSE | byte(2)
	COMMAND_WRITE_AT_RESPONSE     = COMMAND_RESPONSE | byte(3)
	COMMAND_WRITE_AT_RESPONSE_ERR = COMMAND_RESPONSE | byte(4)
	COMMAND_EVENT_RESPONSE        = COMMAND_RESPONSE | byte(5)
	COMMAND_HASHES_RESPONSE       = COMMAND_RESPONSE | byte(6)
	COMMAND_DIRTY_LIST_RESPONSE   = COMMAND_RESPONSE | byte(7)
)

func IsResponse(cmd byte) bool {
	return (cmd & COMMAND_RESPONSE) == COMMAND_RESPONSE
}
